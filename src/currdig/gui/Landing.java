package currdig.gui;

import currdig.core.User;
import currdig.utils.RMI;
import currdig.utils.Utils;
import java.awt.HeadlessException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import p2p.IremoteP2P;

/**
 * The Landing class serves as the entry point for the application. It allows
 * users to select a P2P server, login, or register.
 */
public class Landing extends javax.swing.JFrame {

    private IremoteP2P node;

    /**
     * Creates a new Landing form.
     *
     * @throws NotBoundException if the specified name is not currently bound in
     * the RMI registry.
     * @throws MalformedURLException if the server's URL is malformed.
     */
    public Landing() throws NotBoundException, MalformedURLException {
        try {
            initComponents();
            List<String> availableServers = Utils.discoverServers();
            if (availableServers.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No P2P nodes found. Please try again.");
                System.exit(0);
            }

            // Display available servers in a dialog
            String selectedServer = (String) JOptionPane.showInputDialog(this,
                    "Select a server to connect to:",
                    "Server Selection",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    availableServers.toArray(),
                    availableServers.get(0));

            // If the user clicked cancel or closed the dialog, exit the program
            if (selectedServer == null) {
                System.exit(0); // Exit the program
            }

            // If a valid server is selected
            if (!selectedServer.isEmpty()) {
                node = (IremoteP2P) RMI.getRemote(selectedServer);
                System.out.println("Connected to remote P2P node at " + selectedServer);

                startNodeHealthCheck(); // Start health monitoring
            }
        } catch (HeadlessException | MalformedURLException | NotBoundException | RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Unexpected error: " + ex.getMessage());
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Login = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtLoginUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        txtLoginPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        lblLogo1 = new javax.swing.JLabel();
        Register = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtRegisterUsername = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        txtRegisterPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        About = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Digital Curriculum Entity View");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder("Username"));

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        txtLoginPassword.setBorder(javax.swing.BorderFactory.createTitledBorder("Password"));

        jLabel2.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Login");

        lblLogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/currdig/media/currdig-120x-logo.png"))); // NOI18N
        lblLogo1.setMaximumSize(new java.awt.Dimension(10, 10));
        lblLogo1.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLoginPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtLoginUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLogo1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(lblLogo1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        Login.add(jPanel4);

        jTabbedPane1.addTab("Login", Login);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtRegisterUsername.setBorder(javax.swing.BorderFactory.createTitledBorder("Username"));

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/currdig/media/currdig-120x-logo.png"))); // NOI18N
        lblLogo.setMaximumSize(new java.awt.Dimension(10, 10));
        lblLogo.setPreferredSize(new java.awt.Dimension(100, 100));

        txtRegisterPassword.setBorder(javax.swing.BorderFactory.createTitledBorder("Password"));

        jLabel1.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Register");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRegisterPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRegister, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                            .addComponent(txtRegisterUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtRegisterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRegisterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        Register.add(jPanel5);

        jTabbedPane1.addTab("Register", Register);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Java Application consisting of a Digital Curriculum implemented using Blockchain protocols to maintain integrity and safety.\n\nMade by:\n23193 Vasco Alves\n22912 Bruno Freitas");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout AboutLayout = new javax.swing.GroupLayout(About);
        About.setLayout(AboutLayout);
        AboutLayout.setHorizontalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );
        AboutLayout.setVerticalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("About", About);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Start a thread to check the node's health.
     */
    private void startNodeHealthCheck() {
        new Thread(() -> {
            try {
                while (true) {
                    try {
                        // Perform a lightweight RMI call to check if the node is responsive
                        node.getAddress(); // If this call fails, the node is unresponsive
                    } catch (RemoteException e) {
                        // Notify the user
                        JOptionPane.showMessageDialog(this,
                                "Node is unavailable. Trying to find new server.",
                                "Node Unavailable",
                                JOptionPane.WARNING_MESSAGE);

                        // Redirect to Landing page
                        java.awt.EventQueue.invokeLater(() -> {
                            try {
                                new Landing().setVisible(true); // Show the Landing screen
                            } catch (NotBoundException ex) {
                                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (MalformedURLException ex) {
                                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            this.dispose(); // Close the current instance
                        });

                        break; // Exit the health check loop
                    }

                    // Sleep before the next health check
                    Thread.sleep(5000); // Check every 5 seconds
                }
            } catch (HeadlessException | InterruptedException e) {
            }
        }).start();
    }

    /**
     * Handles the Login button click event. Authenticates the user and opens
     * the Main window upon successful login.
     *
     * @param evt the ActionEvent triggered by the Login button.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {
            // Retrieve the username and password from the text fields
            String username = txtLoginUsername.getText();
            String password = new String(txtLoginPassword.getPassword());
            User user = null;

            // Validate input
            if (username.isEmpty() || password.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username and password are required.");
                return;
            }

            // Authenticate with the P2P node
            if (!node.authenticateWithConsensus(username, password)) {
                JOptionPane.showMessageDialog(this, "Invalid username or password.");
                return;
            } else {
                // Retrieve the user object
                user = node.getUser(username);
                user.load(password);
            }

            // If no exception was thrown, login is successful
            JOptionPane.showMessageDialog(this, "Login successful!");

            // Close the current Landing window
            this.dispose();

            // Open the Main window and pass user details
            Main mainWindow = new Main(user.getPub(), user.getPriv(), user.getSim(), username, node);
            mainWindow.setVisible(true);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Login failed: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * Handles the Register button click event. Registers a new user on the
     * selected P2P node.
     *
     * @param evt the ActionEvent triggered by the Register button.
     */
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        try {
            String username = txtRegisterUsername.getText();
            String password = new String(txtRegisterPassword.getPassword());

            // Validate input
            if (username.isEmpty() || password.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username and password are required.");
                return;
            }

            // Check if the user already exists
            if (node.checkUsrExists(username)) {
                JOptionPane.showMessageDialog(this, "User with this username already exists.");
                return;
            }

            // Register a new user
            if (!node.addUser(username, password)) {
                JOptionPane.showMessageDialog(this, "Failed to register user. Please try again.");
                return;
            }

            JOptionPane.showMessageDialog(this, "User registered successfully.");
        } catch (HeadlessException | RemoteException ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Landing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Landing().setVisible(true);
                } catch (NotBoundException ex) {
                    Logger.getLogger(Landing.class.getName()).log(Level.SEVERE, null, ex);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Landing.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel About;
    private javax.swing.JPanel Login;
    private javax.swing.JPanel Register;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogo1;
    private javax.swing.JPasswordField txtLoginPassword;
    private javax.swing.JTextField txtLoginUsername;
    private javax.swing.JPasswordField txtRegisterPassword;
    private javax.swing.JTextField txtRegisterUsername;
    // End of variables declaration//GEN-END:variables
}
